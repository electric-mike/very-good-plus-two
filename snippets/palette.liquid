<section class="pallette max-width">
  <h2 class="section-heading">Pallette</h2>
  <p class="bold uppercase">Primary Brand Colors</p>
  <div class="colors" v-if="variables['--shop-primary-color'] || variables['--shop-secondary-color']">
    <div class="color" v-if="variables['--shop-primary-color']">
      <div :style="{ 'background-color': variables['--shop-primary-color'] }" class="swatch"></div>
      <p>
        <span class="capitalize">Primary Color</span>
        <br>
        <span class="uppercase">${ variables['--shop-primary-color'] }</span>
      </p>
    </div>
    <div class="color" v-if="variables['--shop-secondary-color']">
      <div :style="{ 'background-color': variables['--shop-secondary-color'] }" class="swatch"></div>
      <p>
        <span class="capitalize">Secondary Color</span>
        <br>
        <span class="uppercase">${ variables['--shop-secondary-color'] }</span>
      </p>
    </div>
  </div>
  <br>
  <br>
  <p class="bold uppercase">Colors</p>
  <p>
    Color is used sparingly to draw attention to interface elements and to deliver positive,
    negative, or warning feedback to the user.
  </p>
  <div class="colors" v-if="variables">
    <div
      class="color"
      v-for="(value, key) in variables"
      v-if="showColor(value, key)"
    >
      <div :style="{ 'background-color': value }" class="swatch"></div>
      <p>
        <span class="capitalize">${ key.replace('$', '').replace(/shop-/g, '').replace(/-/g, ' ') }</span>
        <br>
        <span class="uppercase">${ value }</span>
      </p>
    </div>
  </div>
  <br>
  <div class="colors">
    <div
      class="color"
      v-for="(value, key) in variables"
      v-if="key.includes('shadow')"
    >
      <div
        :class="key.replace('--', '')"
        class="swatch"
        :style="{ 'box-shadow': value }"
      ></div>
      <p>
        <span class="capitalize">${ key.replace('--', '').replace('-', ' ') }</span>
        <br>
        <span v-for="val in value">${ val }</span>
      </p>
    </div>
  </div>
</section>
